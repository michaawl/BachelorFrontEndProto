// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "media.proto" (package "media", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Media } from "./media";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MediaResponse } from "./media";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service media.Media
 */
export interface IMediaClient {
    /**
     * @generated from protobuf rpc: GetImage
     */
    getImage(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse>;
    /**
     * @generated from protobuf rpc: GetAudio
     */
    getAudio(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse>;
    /**
     * @generated from protobuf rpc: GetVideo
     */
    getVideo(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse>;
}
/**
 * @generated from protobuf service media.Media
 */
export class MediaClient implements IMediaClient, ServiceInfo {
    typeName = Media.typeName;
    methods = Media.methods;
    options = Media.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetImage
     */
    getImage(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, MediaResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAudio
     */
    getAudio(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, MediaResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetVideo
     */
    getVideo(input: Empty, options?: RpcOptions): UnaryCall<Empty, MediaResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, MediaResponse>("unary", this._transport, method, opt, input);
    }
}
